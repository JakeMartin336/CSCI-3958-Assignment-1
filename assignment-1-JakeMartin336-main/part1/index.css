/*
  You shouldn't need to change these properties for the assignment wrapped and red/green/blue color divs!
*/
#assignments-wrapper {
  padding: 1.5rem;
}

.assignment {
  min-height: 40px;
  margin-bottom: .5rem;
  background: black;
  display: flex;
}


.red {
  width: 5%;
  height: 40px;
  background: #DC3220;
}

.green {
  width: 5%;
  height: 40px;
  background: #1AFF1A;
}

.blue {
  width: 5%;
  height: 40px;
  background: #1A85FF;
}

/*
Example 1 & 2 CSS
*/

#example1 {
  justify-content: space-between;
}

#example2 {
  justify-content: center;
  align-items: center;
}

#example2 > .green {
  height: 10px;
  width: 100%;
}

#row1 {
  justify-content: space-around;
}

#row2 {
  justify-content: end;
  align-items: center;
}

#row2 > .green {
  height: 10px;
}

#row3 {
  justify-content: space-evenly;
}

#row3 >.green {
  display:flex;
  justify-content: center;
  align-items: center;
}

#row3 .blue {
  width: 10px;
  height: 10px;
}

#row4 {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#row4 > .red {
  height: 10px;
}

#row4 > .green { 
  width: 10px;
  height: 10px;
}
#row4 > .blue {
  width: 10px;
  height: 10px;
}


#row5 > .blue {
  display:flex;
  justify-content: center;
  align-items: center;
}

#row5 > .blue > .green{
  height: 10px;
  width: 100%;
}

#row5 > .green {
  display:flex;
  justify-content: center;
  align-items: center;
}

#row5 > .green >.red{
  height: 10px;
  width: 100%;
}

#row5 >.red {
  display:flex;
  justify-content: center;
  align-items: center;
}

#row5 > .red > .blue{
  height: 10px;
  width: 100%;
}

#row6 {
  display: flex;
  justify-content: space-between;
}

#row6 > #red-container {
  display: flex;
  align-items: center;
}

#row6 > #green-container {
  display: flex;
  align-items: flex-end;
}

#row6 > #blue-container {
  display: flex;
  align-items: flex-start;
}

#row6 > #red-container > .red,
#row6 > #green-container > .green,
#row6 > #blue-container > .blue {
  width: 10px;
  height: 10px;
}

#row7 {
  display: flex;
  justify-content: space-between;
}

#row7 > #obj1 {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#row7 > #obj1 > .green{
  width: 10px;
  height: 100%;
}

#row7 > #obj2 {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: column;

}

#row7 > #obj2 > .blue{
  height: 10px;
  width: 100%;
}

#row8 {
  display: flex;
}

#row8 > #obj1 {
  display: flex;
  justify-content: space-around;
  width: 100%;
}

#row8 > #obj2 {
  display: flex;
  justify-content: space-around;
  width: 100%;
}

#row8 > #obj3 {
  display: flex;
  justify-content: space-around;
  width: 100%;
}

#row8 > #obj1 > .red,
#row8 > #obj1 > .green,
#row8 > #obj2 > .red,
#row8 > #obj2 > .green,
#row8 > #obj3 > .red,
#row8 > #obj3 > .green { 
  width:10px
}

#row9 {
  display: flex;
  justify-content: space-evenly;
}

#row9 > #obj1 {
  display: flex;
  align-items: center;
  flex-direction: column;  
}

#row9 > #obj1 > .red {
  width: 10px;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

#row9 > #obj1 > .red > .blue {
  width: 100%;
  height: 10px;
}

#row9 > #obj2 {
  display: flex;
  align-items: center;
  flex-direction: row;
}

#row9 > #obj2 > .green {
  width: 100%;
  height: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
}

#row9 > #obj2 > .green > .red {
  width: 10px;
  height: 100%;
}

#row10 {
  display: flex;
}

#row10 > .green {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

#row10 > .green > #red {
  height: 10px;
  width: 70px;
}

#row10 > .green > #obj {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 10px;
}

#row10 > .green > #obj > .blue {
  width: 100%;
  height: 10px;
}

/*
Hint: Write Row 1 - 10 CSS below
For smaller div dimensions (thin strips or boxes like in row 2 and 8) use 10px
You should be able to complete this using display:flex, justify-content and align-items
There's no one way to go about it, feel free to explore different approaches!
*/

